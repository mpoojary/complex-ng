name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker test image
      run: docker build -t complex/react-test -f ./client/Dockerfile.dev ./client
    - name: Execure test cases on test image
      run: docker run -e CI=true complex/react-test npm test -- --coverage
    - name: Building Production images
      run: |
        docker build -t ${{secrets.DOCKER_USER}}/multi-client ./client
        docker build -t ${{secrets.DOCKER_USER}}/multi-nginx ./nginx
        docker build -t ${{secrets.DOCKER_USER}}/multi-server ./server
        docker build -t ${{secrets.DOCKER_USER}}/multi-worker ./worker
    - name: Docker hub login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Docker push
      run: |
        docker push ${{secrets.DOCKER_USER}}/multi-client
        docker push ${{secrets.DOCKER_USER}}/multi-nginx
        docker push ${{secrets.DOCKER_USER}}/multi-server
        docker push ${{secrets.DOCKER_USER}}/multi-worker
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Get Timestamp
      uses: gerred/actions/current-time@master
      id: current-time
    - name: Run String Replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        pattern: '[:\.]+'
        string: "${{ steps.current-time.outputs.time }}"
        replace-with: '-'
        flags: 'g'
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v16
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        application_name: ${{ env.AWS_APP_NAME }}
        environment_name: ${{ env.AWS_ENV }}
        version_label: "multi-docker-${{ steps.format-time.outputs.replaced }}"
        region: ${{ env.AWS_REGION }}
